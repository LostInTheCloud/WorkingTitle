#include "main.h"

uint32_t DEFAULT_PALETTE[4] = {WHITE, LIGHT_GREY, DARK_GREY, BLACK};
uint32_t colour[2][2] = {{WHITE, LIGHT_GREY}, {DARK_GREY, BLACK}};

void (*exec_opcode[0x100])(void) =
        {OP_NOP, OP_LD_BC_D16, OP_LD_PBC_A, OP_INC_BC, OP_INC_B, OP_INC_B, OP_LD_B_D8, OP_RLCA,
         OP_LD_A16_SP, OP_ADD_HL_BC, OP_LD_A_PBC, OP_DEC_BC, OP_INC_C, OP_DEC_BC, OP_LD_C_D8, OP_RRCA,
         OP_STOP, OP_LD_DE_D16, OP_LD_PDE_A, OP_INC_DE, OP_INC_D, OP_DEC_D, OP_LD_D_D8, OP_RLA,
         OP_JR_R8, OP_ADD_HL_DE, OP_LD_A_PDE, OP_DEC_DE, OP_INC_E, OP_DEC_E, OP_LD_E_D8, OP_RRA,
         OP_JR_NZ_R8, OP_LD_HL_D16, OP_LD_PHLI_A, OP_INC_HL, OP_INC_H, OP_DEC_H, OP_LD_H_D8, OP_DAA,
         OP_JR_Z_R8, OP_ADD_HL_HL, OP_LD_A_PHLI, OP_DEC_HL, OP_INC_L, OP_DEC_L, OP_LD_L_D8, OP_CPL,
         OP_JR_NC_R8, OP_LD_SP_D16, OP_LD_PHLD_A, OP_INC_SP, OP_INC_PHL, OP_DEC_PHL, OP_LD_PHL_D8, OP_LD_PHL_D8,
         OP_JR_C_R8, OP_ADD_HL_SP, OP_LD_A_PHLD, OP_DEC_SP, OP_INC_A, OP_DEC_A, OP_LD_A_D8, OP_CCF,
         OP_LD_B_B, OP_LD_B_C, OP_LD_B_D, OP_LD_B_E, OP_LD_B_H, OP_LD_B_L, OP_LD_B_PHL, OP_LD_B_A,
         OP_LD_C_B, OP_LD_C_C, OP_LD_C_D, OP_LD_C_E, OP_LD_C_H, OP_LD_C_L, OP_LD_C_PHL, OP_LD_C_A,
         OP_LD_D_B, OP_LD_D_C, OP_LD_D_D, OP_LD_D_E, OP_LD_D_H, OP_LD_D_L, OP_LD_D_PHL, OP_LD_D_A,
         OP_LD_E_B, OP_LD_E_C, OP_LD_E_D, OP_LD_E_E, OP_LD_E_H, OP_LD_E_L, OP_LD_E_PHL, OP_LD_E_A,
         OP_LD_H_B, OP_LD_H_C, OP_LD_H_D, OP_LD_H_E, OP_LD_H_H, OP_LD_H_L, OP_LD_H_PHL, OP_LD_H_A,
         OP_LD_L_B, OP_LD_L_C, OP_LD_L_D, OP_LD_L_E, OP_LD_L_H, OP_LD_L_L, OP_LD_L_PHL, OP_LD_L_A,
         OP_LD_PHL_B, OP_LD_PHL_C, OP_LD_PHL_D, OP_LD_PHL_E, OP_LD_PHL_H, OP_LD_PHL_L, OP_HALT, OP_LD_PHL_A,
         OP_LD_A_B, OP_LD_A_C, OP_LD_A_D, OP_LD_A_E, OP_LD_A_H, OP_LD_A_L, OP_LD_A_PHL, OP_LD_A_A,
         OP_ADD_A_B, OP_ADD_A_C, OP_ADD_A_D, OP_ADD_A_E, OP_ADD_A_H, OP_ADD_A_L, OP_ADD_A_PHL, OP_ADD_A_A,
         OP_ADC_A_B, OP_ADC_A_C, OP_ADC_A_D, OP_ADC_A_E, OP_ADC_A_H, OP_ADC_A_L, OP_ADC_A_PHL, OP_ADC_A_A,
         OP_SUB_A_B, OP_SUB_A_C, OP_SUB_A_D, OP_SUB_A_E, OP_SUB_A_H, OP_SUB_A_L, OP_SUB_A_PHL, OP_SUB_A_A,
         OP_SBC_A_B, OP_SBC_A_C, OP_SBC_A_D, OP_SBC_A_E, OP_SBC_A_H, OP_SBC_A_L, OP_SBC_A_PHL, OP_SBC_A_A,
         OP_AND_B, OP_AND_C, OP_AND_D, OP_AND_E, OP_AND_H, OP_AND_L, OP_AND_PHL, OP_AND_A,
         OP_XOR_B, OP_XOR_C, OP_XOR_D, OP_XOR_E, OP_XOR_H, OP_XOR_L, OP_XOR_PHL, OP_XOR_A,
         OP_OR_B, OP_OR_C, OP_OR_D, OP_OR_E, OP_OR_H, OP_OR_L, OP_OR_PHL, OP_OR_A,
         OP_CP_B, OP_CP_C, OP_CP_D, OP_CP_E, OP_CP_H, OP_CP_L, OP_CP_PHL, OP_CP_A,
         OP_RET_NZ, OP_POP_BC, OP_JP_NZ_A16, OP_JP_A16, OP_CALL_NZ_A16, OP_PUSH_BC, OP_ADD_A_D8, OP_RST_00,
         OP_RET_Z, OP_RET, OP_JP_Z_A16, OP_CB, OP_CALL_Z_A16, OP_CALL_A16, OP_ADC_A_D8, OP_RST_08,
         OP_RET_NC, OP_POP_DE, OP_JP_NC_A16, OP_ERROR_D3, OP_CALL_NC_A16, OP_PUSH_DE, OP_SUB_A_D8, OP_RST_10,
         OP_RET_C, OP_RETI, OP_JP_C_A16, OP_ERROR_DB, OP_CALL_C_A16, OP_ERROR_DD, OP_SBC_A_D8, OP_RST_18,
         OP_LDH_PA8_A, OP_POP_HL, OP_LD_OC_A, OP_ERROR_E3, OP_ERROR_E4, OP_PUSH_HL, OP_AND_D8, OP_RST_20,
         OP_ADD_SP_R8, OP_JP_PHL, OP_LD_A16_A, OP_ERROR_EB, OP_ERROR_EC, OP_ERROR_ED, OP_XOR_D8, OP_RST_28,
         OP_LDH_A_A8, OP_POP_AF, OP_LD_A_OC, OP_DI, OP_ERROR_F4, OP_PUSH_AF, OP_OR_D8, OP_RST_30,
         OP_LD_HL_SP_R8, OP_LD_SP_HL, OP_LD_A_A16, OP_EI, OP_ERROR_FC, OP_ERROR_FD, OP_CP_D8, OP_RST_38};

void (*exec_cb[0x100])(void) =
        {OP_RLC_B, OP_RLC_C, OP_RLC_D, OP_RLC_E, OP_RLC_H, OP_RLC_L, OP_RLC_PHL, OP_RLC_A,
         OP_RRC_B, OP_RRC_C, OP_RRC_D, OP_RRC_E, OP_RRC_H, OP_RRC_L, OP_RRC_PHL, OP_RRC_A,
         OP_RL_B, OP_RL_C, OP_RL_D, OP_RL_E, OP_RL_H, OP_RL_L, OP_RL_PHL, OP_RL_A,
         OP_RR_B, OP_RR_C, OP_RR_D, OP_RR_E, OP_RR_H, OP_RR_L, OP_RR_PHL, OP_RR_A,
         OP_SLA_B, OP_SLA_C, OP_SLA_D, OP_SLA_E, OP_SLA_H, OP_SLA_L, OP_SLA_PHL, OP_SLA_A,
         OP_SRA_B, OP_SRA_C, OP_SRA_D, OP_SRA_E, OP_SRA_H, OP_SRA_L, OP_SRA_PHL, OP_SRA_A,
         OP_SWAP_B, OP_SWAP_C, OP_SWAP_D, OP_SWAP_E, OP_SWAP_H, OP_SWAP_L, OP_SWAP_PHL, OP_SWAP_A,
         OP_SRL_B, OP_SRL_C, OP_SRL_D, OP_SRL_E, OP_SRL_H, OP_SRL_L, OP_SRL_PHL, OP_SRL_A,
         OP_BIT_0_B, OP_BIT_0_C, OP_BIT_0_D, OP_BIT_0_E, OP_BIT_0_H, OP_BIT_0_L, OP_BIT_0_PHL, OP_BIT_0_A,
         OP_BIT_1_B, OP_BIT_1_C, OP_BIT_1_D, OP_BIT_1_E, OP_BIT_1_H, OP_BIT_1_L, OP_BIT_1_PHL, OP_BIT_1_A,
         OP_BIT_2_B, OP_BIT_2_C, OP_BIT_2_D, OP_BIT_2_E, OP_BIT_2_H, OP_BIT_2_L, OP_BIT_2_PHL, OP_BIT_2_A,
         OP_BIT_3_B, OP_BIT_3_C, OP_BIT_3_D, OP_BIT_3_E, OP_BIT_3_H, OP_BIT_3_L, OP_BIT_3_PHL, OP_BIT_3_A,
         OP_BIT_4_B, OP_BIT_4_C, OP_BIT_4_D, OP_BIT_4_E, OP_BIT_4_H, OP_BIT_4_L, OP_BIT_4_PHL, OP_BIT_4_A,
         OP_BIT_5_B, OP_BIT_5_C, OP_BIT_5_D, OP_BIT_5_E, OP_BIT_5_H, OP_BIT_5_L, OP_BIT_5_PHL, OP_BIT_5_A,
         OP_BIT_6_B, OP_BIT_6_C, OP_BIT_6_D, OP_BIT_6_E, OP_BIT_6_H, OP_BIT_6_L, OP_BIT_6_PHL, OP_BIT_6_A,
         OP_BIT_7_B, OP_BIT_7_C, OP_BIT_7_D, OP_BIT_7_E, OP_BIT_7_H, OP_BIT_7_L, OP_BIT_7_PHL, OP_BIT_7_A,
         OP_RES_0_B, OP_RES_0_C, OP_RES_0_D, OP_RES_0_E, OP_RES_0_H, OP_RES_0_L, OP_RES_0_PHL, OP_RES_0_A,
         OP_RES_1_B, OP_RES_1_C, OP_RES_1_D, OP_RES_1_E, OP_RES_1_H, OP_RES_1_L, OP_RES_1_PHL, OP_RES_1_A,
         OP_RES_2_B, OP_RES_2_C, OP_RES_2_D, OP_RES_2_E, OP_RES_2_H, OP_RES_2_L, OP_RES_2_PHL, OP_RES_2_A,
         OP_RES_3_B, OP_RES_3_C, OP_RES_3_D, OP_RES_3_E, OP_RES_3_H, OP_RES_3_L, OP_RES_3_PHL, OP_RES_3_A,
         OP_RES_4_B, OP_RES_4_C, OP_RES_4_D, OP_RES_4_E, OP_RES_4_H, OP_RES_4_L, OP_RES_4_PHL, OP_RES_4_A,
         OP_RES_5_B, OP_RES_5_C, OP_RES_5_D, OP_RES_5_E, OP_RES_5_H, OP_RES_5_L, OP_RES_5_PHL, OP_RES_5_A,
         OP_RES_6_B, OP_RES_6_C, OP_RES_6_D, OP_RES_6_E, OP_RES_6_H, OP_RES_6_L, OP_RES_6_PHL, OP_RES_6_A,
         OP_RES_7_B, OP_RES_7_C, OP_RES_7_D, OP_RES_7_E, OP_RES_7_H, OP_RES_7_L, OP_RES_7_PHL, OP_RES_7_A,
         OP_SET_0_B, OP_SET_0_C, OP_SET_0_D, OP_SET_0_E, OP_SET_0_H, OP_SET_0_L, OP_SET_0_PHL, OP_SET_0_A,
         OP_SET_1_B, OP_SET_1_C, OP_SET_1_D, OP_SET_1_E, OP_SET_1_H, OP_SET_1_L, OP_SET_1_PHL, OP_SET_1_A,
         OP_SET_2_B, OP_SET_2_C, OP_SET_2_D, OP_SET_2_E, OP_SET_2_H, OP_SET_2_L, OP_SET_2_PHL, OP_SET_2_A,
         OP_SET_3_B, OP_SET_3_C, OP_SET_3_D, OP_SET_3_E, OP_SET_3_H, OP_SET_3_L, OP_SET_3_PHL, OP_SET_3_A,
         OP_SET_4_B, OP_SET_4_C, OP_SET_4_D, OP_SET_4_E, OP_SET_4_H, OP_SET_4_L, OP_SET_4_PHL, OP_SET_4_A,
         OP_SET_5_B, OP_SET_5_C, OP_SET_5_D, OP_SET_5_E, OP_SET_5_H, OP_SET_5_L, OP_SET_5_PHL, OP_SET_5_A,
         OP_SET_6_B, OP_SET_6_C, OP_SET_6_D, OP_SET_6_E, OP_SET_6_H, OP_SET_6_L, OP_SET_6_PHL, OP_SET_6_A,
         OP_SET_7_B, OP_SET_7_C, OP_SET_7_D, OP_SET_7_E, OP_SET_7_H, OP_SET_7_L, OP_SET_7_PHL, OP_SET_7_A};

int OPCODE_LENGTH[0x100] =
        {
                1, 3, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1,
                0, 3, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1,
                2, 3, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1,
                2, 3, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1,
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                1, 1, 3, 3, 3, 1, 2, 1, 1, 1, 3, 0, 3, 3, 2, 1,
                1, 1, 3, 0, 3, 1, 2, 1, 1, 1, 3, 0, 3, 0, 2, 1,
                2, 1, 1, 0, 0, 1, 2, 1, 2, 1, 3, 0, 0, 0, 2, 1,
                2, 1, 1, 1, 0, 1, 2, 1, 2, 1, 3, 1, 0, 0, 2, 1
        };

int CYCLE_LENGTH[0x100] =
        {
                1, 3, 2, 2, 1, 1, 2, 1, 5, 2, 2, 2, 1, 1, 2, 1,
                0, 3, 2, 2, 1, 1, 2, 1, 3, 2, 2, 2, 1, 1, 2, 1,
                2, 3, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1,
                2, 3, 2, 2, 3, 3, 3, 1, 2, 2, 2, 2, 1, 1, 2, 1,
                1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
                1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
                1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
                2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1,
                1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
                1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
                1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
                1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,
                2, 3, 3, 4, 3, 4, 2, 4, 2, 4, 3, 0, 3, 6, 2, 4,
                2, 3, 3, 0, 3, 4, 2, 4, 2, 4, 3, 0, 3, 0, 2, 4,
                3, 3, 2, 0, 0, 4, 2, 4, 4, 1, 4, 0, 0, 0, 2, 4,
                3, 3, 2, 1, 0, 4, 2, 4, 3, 2, 4, 1, 0, 0, 2, 4
        };